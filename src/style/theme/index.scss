//index.scss    //全局scss文件
@import './theme.scss';



//遍历主题map
@mixin themeify {

  @each $theme-name,
  $theme-map in $themes {
    //!global 把局部变量强升为全局变量
    $theme-map: $theme-map !global;

    //判断html的data-theme的属性值  #{}是sass的插值表达式
    //& sass嵌套里的父容器标识   @content是混合器插槽，像vue的slot
    [class="#{$theme-name}"] & {
      @content;
    }
  }
}

//声明一个根据Key获取颜色的function
@function themed($key) {
  @return map-get($theme-map, $key);
}

//获取背景颜色
@mixin background-color($color) {
  @include themeify {
    background-color: themed($color) !important;
  }
}

//获取字体颜色
@mixin font-color($color) {
  @include themeify {
    color: themed($color) !important;
  }
}
//获取字体大小
@mixin font-size($font-size) {
  @include themeify {
    font-size: $font-size !important;
  }
}
// 获取外边框颜色及大小
@mixin border($position, $font-size, $color) {
  @include themeify {
    @if $position{
      border-#{$position}:$font-size solid themed($color) !important;
    }
    @else{
      border:$font-size solid themed($color) !important;
    }

  }
}
// 获取内边框颜色及大小
@mixin outline($font-size, $color) {
  @include themeify {
      outline:$font-size solid themed($color) !important;
  }
}

//获取边缘阴影色
@mixin  box-show($color:null,$size) {
  @include themeify {

    @if $color{
      box-shadow: themed($color) $size !important;
    }@else{
      box-shadow:  $size !important;
    }
  }
}






// 固定主题色相关
// .light   {
//     color: $text-color-light;
//     a{
//         color: $text-color-light;
//     }
//   }
  .dark   {
    color:$text-color-dark;
    // a{
    //     color: $text-color-dark;
    // }
  }